apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: course-expired
  schedule: "0 0 1 * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      restartPolicy: OnFailure
          containers:
            - name: create-user-quiz-states
              image: ${BACKEND_IMAGE}
              command: ["psql", "-U", "$(DB_NAME)", "-d", "$(DB_HOST)", "-c", 
                  "update course as c
                  set status = 'ended'
                  from (select result.course_id
                  from (select max(qa.created_at) as latest_course_submission, q.course_id as course_id
                  from quiz_answer qa
                  left join quiz q on qa.quiz_id = q.id
                  group by q.course_id) as result
                  where now() - result.latest_course_submission >= interval '1 year') as ended_courses
                  where ended_courses.course_id = c.id;"]
              resources:
                requests:
                  memory: "1000Mi"
              env:
                - name: REDIS_HOST
                  value: "quizzes-backend-redis-master.default.svc.cluster.local"
                - name: REDIS_PORT
                  value: "6379"
                - name: REDIS_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: quizzes-backend-redis
                      key: redis-password
                - name: DB_NAME
                  valueFrom:
                    secretKeyRef:
                      name: backend-database-secret
                      key: POSTGRES_DATABASE
                - name: DB_HOST
                  valueFrom:
                    secretKeyRef:
                      name: backend-database-secret
                      key: POSTGRES_HOST
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: backend-database-secret
                      key: POSTGRES_PASSWORD
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: backend-database-secret
                      key: POSTGRES_USERNAME
                - name: TMC_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: backend-database-secret
                      key: TMC_TOKEN